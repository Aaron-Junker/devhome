namespace Microsoft.Windows.DevHome.SDK
{
    [contractversion(1)] 
    apicontract DevHomeContract {}

    [contract(Microsoft.Windows.DevHome.SDK.DevHomeContract, 1)]
    interface IRepositoryProvider requires Windows.Foundation.IClosable
    {
        String DisplayName { get; };

        Windows.Foundation.IAsyncOperation<IIterable<IRepository> > GetRepositoriesAsync(IDeveloperId developerId);

        Windows.Foundation.IAsyncOperation <IRepository> ParseRepositoryFromUrlAsync(Windows.Foundation.Uri uri);
    };

    [contract(Microsoft.Windows.DevHome.SDK.DevHomeContract, 1)]
    interface IRepository
    {
        String DisplayName { get; };

        String OwningAccountName { get; };

        Boolean IsPrivate { get; };

        Windows.Foundation.DateTime LastUpdated { get; };

        Windows.Foundation.IAsyncAction CloneRepositoryAsync(String cloneDestination, IDeveloperId developerId);

        Windows.Foundation.IAsyncAction CloneRepositoryAsync(String cloneDestination);
    }

    [contract(Microsoft.Windows.DevHome.SDK.DevHomeContract, 1)]
    interface IExtensionAdaptiveCardSession 
    {
        void Initialize(IExtensionAdaptiveCard pluginUI);
        void Dispose();
        void OnAction(String action, String inputs);
    };

    [contract(Microsoft.Windows.DevHome.SDK.DevHomeContract, 1)]
    interface IExtensionAdaptiveCard
    {
        String TemplateJson { get; };
        String DataJson { get; };
        String State { get; };

        void Update(String templateJson, String dataJson, String state);
    };

    [contract(Microsoft.Windows.DevHome.SDK.DevHomeContract, 1)]
    interface IDeveloperIdProvider requires Windows.Foundation.IClosable
    {
        String GetName();

        IIterable<IDeveloperId> GetLoggedInDeveloperIds();

        Windows.Foundation.IAsyncOperation<IDeveloperId> LoginNewDeveloperIdAsync();

        void LogoutDeveloperId(IDeveloperId developerId);

        IExtensionAdaptiveCardSession GetLoginAdaptiveCardSession();

        event Windows.Foundation.EventHandler<IDeveloperId> LoggedIn;

        event Windows.Foundation.EventHandler<IDeveloperId> LoggedOut;

        event Windows.Foundation.EventHandler<IDeveloperId> Updated;
    };

    [contract(Microsoft.Windows.DevHome.SDK.DevHomeContract, 1)]
    // IDeveloperId is the basic interface for DeveloperId corresponding to each logged in user, used by the Dev Home Core app
    interface IDeveloperId
    {
        String LoginId();
        String Url();
    };

}
